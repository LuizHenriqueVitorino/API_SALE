name: Teste Automático

on:
  push:
    branches:
      - main

jobs:
  Roda_A_API:
    runs-on: self-hosted

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install Flask
      run: pip install Flask
    
    - name: Install Robot and libraries
      run: |
        pip install robotframework
        pip install robotframework-requests

    - name: Start API
      run: |
        python3 mockes/mocke_sale.py &
        echo $! > api_pid.txt # Salva o PID da API em um arquivo
        sleep 2

    - name: Run Tests
      run: |
        robot testes/login_test.robot

    - name: Stop API
      run: |
        API_PID=$(cat api_pid.txt) # Lê o PID da API do arquivo
        kill $API_PID # Interrompe a execução da API

  notifyTelegram:
    name: Notify deploy status 🚀
    needs: [Roda_A_API]
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
    # - name: Install docker
    #     run: |
    #       apt-get update && apt-get install --no-install-recommends -y ca-certificates curl gnupg lsb-release sudo
    #       curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    #       apt-get update && apt-get install --no-install-recommends -y docker-ce docker-ce-cli containerd.io
    - name: send custom message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          ✅ Nova versão de *${{ env.STAGE_NAME }}* disponível!
            ⎿ 📌 Autor responsável: ${{ github.actor }}

            ✏️ De: [${{ github.repository }}](${{ github.repository.html_url }})

            🏷️ Versão : ```${{ env.PR_NUMBER_OR_MASTER }}```
            ⎿ 🛠️ Build : #```${{ github.run_number }}```

            🧬 Alterações: [Aqui!](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            📦 Deploy: [Aqui!](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Esta é uma mensagem automática e informativa. Por favor, não responda.

  notifyTelegramTEste1:
    name: Notify deploy status Teste1 🚀
    needs: [Roda_A_API]
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
    - name: Teste 1
      uses: appleboy/telegram-action@master
      with:
        to: 5036257879
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          ✅ Teste 1

  notifyTelegramTEste2:
    name: Notify deploy status Teste2 🚀
    needs: [Roda_A_API]
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
    - name: Teste 2
      uses: appleboy/telegram-action@master
      with:
        to: -4088268458
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          ✅ Deus é mais!

  notifyTelegramTEste3:
    name: Notify deploy status Teste3 🚀
    needs: [Roda_A_API]
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
    - name: Teste 3
      uses: appleboy/telegram-action@master
      with:
        to: 4088268458
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          ✅ Teste 3
          
  NotificaAiPraMim:
    name: Notifica aí pra mim! 🚀
    needs: [Roda_A_API]
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
    - name: Teste 3
      uses: appleboy/telegram-action@master
      with:
        to: 6082736518
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          ✅ Notificou!!!!!!


    # - name: Send error build message to Telegram 💬❌
    #     if: ${{ always() && (needs.deploy.result == 'failure') }}
    #     uses: appleboy/telegram-action@master
    #     env:
    #       GITHUB_CONTEXT: ${{ toJSON(github) }}
    #       PR_NUMBER_OR_MASTER: ${{ github.event.number == 0 && 'stable from master' ||  format('#{0}', github.event.number)  }}
    #       STAGE_NAME: ${{ github.ref == 'refs/heads/master' && 'produção' || 'desenvolvimento' }}

    #     with:
    #       to: ${{ secrets.TELEGRAM_ID }}
    #       token: ${{ secrets.TELEGRAM_TOKEN }}
    #       format: markdown
    #       message: |
    #         ❌ Nova versão de *${{ env.STAGE_NAME }}* não disponível, pois falhou!
    #         ⎿ 📌 Autor responsável: ${{ github.actor }}

    #         ✏️ De: [${{ github.repository }}](https://github.com/${{ github.repository }})

    #         🏷️ Versão : ```${{ env.PR_NUMBER_OR_MASTER }}```
    #         ⎿ 🛠️ Build : #```${{ github.run_number }}```

    #         🧬 Alterações: [Aqui!](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
    #         📦 Deploy: [Aqui!](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

    #         Esta é uma mensagem automática e informativa. Por favor, 

    